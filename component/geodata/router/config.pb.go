// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.3
// source: component/geodata/router/config.proto

package router

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type of domain value.
type Domain_Type int32

const (
	// The value is used as is.
	Domain_Plain Domain_Type = 0
	// The value is used as a regular expression.
	Domain_Regex Domain_Type = 1
	// The value is a root domain.
	Domain_Domain Domain_Type = 2
	// The value is a domain.
	Domain_Full Domain_Type = 3
)

// Enum value maps for Domain_Type.
var (
	Domain_Type_name = map[int32]string{
		0: "Plain",
		1: "Regex",
		2: "Domain",
		3: "Full",
	}
	Domain_Type_value = map[string]int32{
		"Plain":  0,
		"Regex":  1,
		"Domain": 2,
		"Full":   3,
	}
)

func (x Domain_Type) Enum() *Domain_Type {
	p := new(Domain_Type)
	*p = x
	return p
}

func (x Domain_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Domain_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_component_geodata_router_config_proto_enumTypes[0].Descriptor()
}

func (Domain_Type) Type() protoreflect.EnumType {
	return &file_component_geodata_router_config_proto_enumTypes[0]
}

func (x Domain_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Domain for routing decision.
type Domain struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type      Domain_Type            `protobuf:"varint,1,opt,name=type,proto3,enum=quirktiva.component.geodata.router.Domain_Type" json:"type,omitempty"`
	xxx_hidden_Value     string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	xxx_hidden_Attribute *[]*Domain_Attribute   `protobuf:"bytes,3,rep,name=attribute,proto3" json:"attribute,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Domain) Reset() {
	*x = Domain{}
	mi := &file_component_geodata_router_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Domain) GetType() Domain_Type {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return Domain_Plain
}

func (x *Domain) GetValue() string {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return ""
}

func (x *Domain) GetAttribute() []*Domain_Attribute {
	if x != nil {
		if x.xxx_hidden_Attribute != nil {
			return *x.xxx_hidden_Attribute
		}
	}
	return nil
}

func (x *Domain) SetType(v Domain_Type) {
	x.xxx_hidden_Type = v
}

func (x *Domain) SetValue(v string) {
	x.xxx_hidden_Value = v
}

func (x *Domain) SetAttribute(v []*Domain_Attribute) {
	x.xxx_hidden_Attribute = &v
}

type Domain_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Domain matching type.
	Type Domain_Type
	// Domain value.
	Value string
	// Attributes of this domain. May be used for filtering.
	Attribute []*Domain_Attribute
}

func (b0 Domain_builder) Build() *Domain {
	m0 := &Domain{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_Attribute = &b.Attribute
	return m0
}

// IP for routing decision, in CIDR form.
type CIDR struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ip     []byte                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	xxx_hidden_Prefix uint32                 `protobuf:"varint,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CIDR) Reset() {
	*x = CIDR{}
	mi := &file_component_geodata_router_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CIDR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CIDR) ProtoMessage() {}

func (x *CIDR) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CIDR) GetIp() []byte {
	if x != nil {
		return x.xxx_hidden_Ip
	}
	return nil
}

func (x *CIDR) GetPrefix() uint32 {
	if x != nil {
		return x.xxx_hidden_Prefix
	}
	return 0
}

func (x *CIDR) SetIp(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Ip = v
}

func (x *CIDR) SetPrefix(v uint32) {
	x.xxx_hidden_Prefix = v
}

type CIDR_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// IP address, should be either 4 or 16 bytes.
	Ip []byte
	// Number of leading ones in the network mask.
	Prefix uint32
}

func (b0 CIDR_builder) Build() *CIDR {
	m0 := &CIDR{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ip = b.Ip
	x.xxx_hidden_Prefix = b.Prefix
	return m0
}

type GeoIP struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CountryCode  string                 `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	xxx_hidden_Cidr         *[]*CIDR               `protobuf:"bytes,2,rep,name=cidr,proto3" json:"cidr,omitempty"`
	xxx_hidden_ReverseMatch bool                   `protobuf:"varint,3,opt,name=reverse_match,json=reverseMatch,proto3" json:"reverse_match,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GeoIP) Reset() {
	*x = GeoIP{}
	mi := &file_component_geodata_router_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoIP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIP) ProtoMessage() {}

func (x *GeoIP) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GeoIP) GetCountryCode() string {
	if x != nil {
		return x.xxx_hidden_CountryCode
	}
	return ""
}

func (x *GeoIP) GetCidr() []*CIDR {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
	}
	return nil
}

func (x *GeoIP) GetReverseMatch() bool {
	if x != nil {
		return x.xxx_hidden_ReverseMatch
	}
	return false
}

func (x *GeoIP) SetCountryCode(v string) {
	x.xxx_hidden_CountryCode = v
}

func (x *GeoIP) SetCidr(v []*CIDR) {
	x.xxx_hidden_Cidr = &v
}

func (x *GeoIP) SetReverseMatch(v bool) {
	x.xxx_hidden_ReverseMatch = v
}

type GeoIP_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CountryCode  string
	Cidr         []*CIDR
	ReverseMatch bool
}

func (b0 GeoIP_builder) Build() *GeoIP {
	m0 := &GeoIP{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CountryCode = b.CountryCode
	x.xxx_hidden_Cidr = &b.Cidr
	x.xxx_hidden_ReverseMatch = b.ReverseMatch
	return m0
}

type GeoIPList struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Entry *[]*GeoIP              `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GeoIPList) Reset() {
	*x = GeoIPList{}
	mi := &file_component_geodata_router_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoIPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoIPList) ProtoMessage() {}

func (x *GeoIPList) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GeoIPList) GetEntry() []*GeoIP {
	if x != nil {
		if x.xxx_hidden_Entry != nil {
			return *x.xxx_hidden_Entry
		}
	}
	return nil
}

func (x *GeoIPList) SetEntry(v []*GeoIP) {
	x.xxx_hidden_Entry = &v
}

type GeoIPList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Entry []*GeoIP
}

func (b0 GeoIPList_builder) Build() *GeoIPList {
	m0 := &GeoIPList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entry = &b.Entry
	return m0
}

type GeoSite struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CountryCode string                 `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	xxx_hidden_Domain      *[]*Domain             `protobuf:"bytes,2,rep,name=domain,proto3" json:"domain,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GeoSite) Reset() {
	*x = GeoSite{}
	mi := &file_component_geodata_router_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoSite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoSite) ProtoMessage() {}

func (x *GeoSite) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GeoSite) GetCountryCode() string {
	if x != nil {
		return x.xxx_hidden_CountryCode
	}
	return ""
}

func (x *GeoSite) GetDomain() []*Domain {
	if x != nil {
		if x.xxx_hidden_Domain != nil {
			return *x.xxx_hidden_Domain
		}
	}
	return nil
}

func (x *GeoSite) SetCountryCode(v string) {
	x.xxx_hidden_CountryCode = v
}

func (x *GeoSite) SetDomain(v []*Domain) {
	x.xxx_hidden_Domain = &v
}

type GeoSite_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CountryCode string
	Domain      []*Domain
}

func (b0 GeoSite_builder) Build() *GeoSite {
	m0 := &GeoSite{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CountryCode = b.CountryCode
	x.xxx_hidden_Domain = &b.Domain
	return m0
}

type GeoSiteList struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Entry *[]*GeoSite            `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GeoSiteList) Reset() {
	*x = GeoSiteList{}
	mi := &file_component_geodata_router_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoSiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoSiteList) ProtoMessage() {}

func (x *GeoSiteList) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GeoSiteList) GetEntry() []*GeoSite {
	if x != nil {
		if x.xxx_hidden_Entry != nil {
			return *x.xxx_hidden_Entry
		}
	}
	return nil
}

func (x *GeoSiteList) SetEntry(v []*GeoSite) {
	x.xxx_hidden_Entry = &v
}

type GeoSiteList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Entry []*GeoSite
}

func (b0 GeoSiteList_builder) Build() *GeoSiteList {
	m0 := &GeoSiteList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entry = &b.Entry
	return m0
}

type Domain_Attribute struct {
	state                 protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Key        string                        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	xxx_hidden_TypedValue isDomain_Attribute_TypedValue `protobuf_oneof:"typed_value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Domain_Attribute) Reset() {
	*x = Domain_Attribute{}
	mi := &file_component_geodata_router_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Domain_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain_Attribute) ProtoMessage() {}

func (x *Domain_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_component_geodata_router_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Domain_Attribute) GetKey() string {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return ""
}

func (x *Domain_Attribute) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_TypedValue.(*domain_Attribute_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *Domain_Attribute) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.xxx_hidden_TypedValue.(*domain_Attribute_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *Domain_Attribute) SetKey(v string) {
	x.xxx_hidden_Key = v
}

func (x *Domain_Attribute) SetBoolValue(v bool) {
	x.xxx_hidden_TypedValue = &domain_Attribute_BoolValue{v}
}

func (x *Domain_Attribute) SetIntValue(v int64) {
	x.xxx_hidden_TypedValue = &domain_Attribute_IntValue{v}
}

func (x *Domain_Attribute) HasTypedValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_TypedValue != nil
}

func (x *Domain_Attribute) HasBoolValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TypedValue.(*domain_Attribute_BoolValue)
	return ok
}

func (x *Domain_Attribute) HasIntValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_TypedValue.(*domain_Attribute_IntValue)
	return ok
}

func (x *Domain_Attribute) ClearTypedValue() {
	x.xxx_hidden_TypedValue = nil
}

func (x *Domain_Attribute) ClearBoolValue() {
	if _, ok := x.xxx_hidden_TypedValue.(*domain_Attribute_BoolValue); ok {
		x.xxx_hidden_TypedValue = nil
	}
}

func (x *Domain_Attribute) ClearIntValue() {
	if _, ok := x.xxx_hidden_TypedValue.(*domain_Attribute_IntValue); ok {
		x.xxx_hidden_TypedValue = nil
	}
}

const Domain_Attribute_TypedValue_not_set_case case_Domain_Attribute_TypedValue = 0
const Domain_Attribute_BoolValue_case case_Domain_Attribute_TypedValue = 2
const Domain_Attribute_IntValue_case case_Domain_Attribute_TypedValue = 3

func (x *Domain_Attribute) WhichTypedValue() case_Domain_Attribute_TypedValue {
	if x == nil {
		return Domain_Attribute_TypedValue_not_set_case
	}
	switch x.xxx_hidden_TypedValue.(type) {
	case *domain_Attribute_BoolValue:
		return Domain_Attribute_BoolValue_case
	case *domain_Attribute_IntValue:
		return Domain_Attribute_IntValue_case
	default:
		return Domain_Attribute_TypedValue_not_set_case
	}
}

type Domain_Attribute_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key string
	// Fields of oneof xxx_hidden_TypedValue:
	BoolValue *bool
	IntValue  *int64
	// -- end of xxx_hidden_TypedValue
}

func (b0 Domain_Attribute_builder) Build() *Domain_Attribute {
	m0 := &Domain_Attribute{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	if b.BoolValue != nil {
		x.xxx_hidden_TypedValue = &domain_Attribute_BoolValue{*b.BoolValue}
	}
	if b.IntValue != nil {
		x.xxx_hidden_TypedValue = &domain_Attribute_IntValue{*b.IntValue}
	}
	return m0
}

type case_Domain_Attribute_TypedValue protoreflect.FieldNumber

func (x case_Domain_Attribute_TypedValue) String() string {
	md := file_component_geodata_router_config_proto_msgTypes[6].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isDomain_Attribute_TypedValue interface {
	isDomain_Attribute_TypedValue()
}

type domain_Attribute_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type domain_Attribute_IntValue struct {
	IntValue int64 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

func (*domain_Attribute_BoolValue) isDomain_Attribute_TypedValue() {}

func (*domain_Attribute_IntValue) isDomain_Attribute_TypedValue() {}

var File_component_geodata_router_config_proto protoreflect.FileDescriptor

var file_component_geodata_router_config_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x6f, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69,
	0x76, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x22, 0xd9, 0x02, 0x0a, 0x06,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x52, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0x6c, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50,
	0x6c, 0x61, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x67, 0x65, 0x78, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x03, 0x22, 0x2e, 0x0a, 0x04, 0x43, 0x49, 0x44, 0x52, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x8d, 0x01, 0x0a, 0x05, 0x47, 0x65, 0x6f, 0x49,
	0x50, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x49, 0x44, 0x52, 0x52, 0x04, 0x63, 0x69,
	0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x49, 0x50,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6f, 0x49, 0x50, 0x52, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x70, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x53, 0x69, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x53, 0x69,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76,
	0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6f, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x88, 0x01, 0x0a, 0x26, 0x63, 0x6f,
	0x6d, 0x2e, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x38, 0x38, 0x38, 0x2f, 0x71, 0x75, 0x69,
	0x72, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2f, 0x67, 0x65, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0xaa,
	0x02, 0x22, 0x51, 0x75, 0x69, 0x72, 0x6b, 0x74, 0x69, 0x76, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_component_geodata_router_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_component_geodata_router_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_component_geodata_router_config_proto_goTypes = []any{
	(Domain_Type)(0),         // 0: quirktiva.component.geodata.router.Domain.Type
	(*Domain)(nil),           // 1: quirktiva.component.geodata.router.Domain
	(*CIDR)(nil),             // 2: quirktiva.component.geodata.router.CIDR
	(*GeoIP)(nil),            // 3: quirktiva.component.geodata.router.GeoIP
	(*GeoIPList)(nil),        // 4: quirktiva.component.geodata.router.GeoIPList
	(*GeoSite)(nil),          // 5: quirktiva.component.geodata.router.GeoSite
	(*GeoSiteList)(nil),      // 6: quirktiva.component.geodata.router.GeoSiteList
	(*Domain_Attribute)(nil), // 7: quirktiva.component.geodata.router.Domain.Attribute
}
var file_component_geodata_router_config_proto_depIdxs = []int32{
	0, // 0: quirktiva.component.geodata.router.Domain.type:type_name -> quirktiva.component.geodata.router.Domain.Type
	7, // 1: quirktiva.component.geodata.router.Domain.attribute:type_name -> quirktiva.component.geodata.router.Domain.Attribute
	2, // 2: quirktiva.component.geodata.router.GeoIP.cidr:type_name -> quirktiva.component.geodata.router.CIDR
	3, // 3: quirktiva.component.geodata.router.GeoIPList.entry:type_name -> quirktiva.component.geodata.router.GeoIP
	1, // 4: quirktiva.component.geodata.router.GeoSite.domain:type_name -> quirktiva.component.geodata.router.Domain
	5, // 5: quirktiva.component.geodata.router.GeoSiteList.entry:type_name -> quirktiva.component.geodata.router.GeoSite
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_component_geodata_router_config_proto_init() }
func file_component_geodata_router_config_proto_init() {
	if File_component_geodata_router_config_proto != nil {
		return
	}
	file_component_geodata_router_config_proto_msgTypes[6].OneofWrappers = []any{
		(*domain_Attribute_BoolValue)(nil),
		(*domain_Attribute_IntValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_component_geodata_router_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_component_geodata_router_config_proto_goTypes,
		DependencyIndexes: file_component_geodata_router_config_proto_depIdxs,
		EnumInfos:         file_component_geodata_router_config_proto_enumTypes,
		MessageInfos:      file_component_geodata_router_config_proto_msgTypes,
	}.Build()
	File_component_geodata_router_config_proto = out.File
	file_component_geodata_router_config_proto_rawDesc = nil
	file_component_geodata_router_config_proto_goTypes = nil
	file_component_geodata_router_config_proto_depIdxs = nil
}
